
# Generated by CodiumAI

import pytest

from src.game import Game
from src.service import GameMapper

class TestGameMapper:
    # GameMapper can add a game to the list of games
    def test_add_game(self):
        game = Game()
        GameMapper().add(game)
        assert GameMapper().get(game.id) == game

    # GameMapper can get a game by its id
    def test_get_game_by_id(self):
        game = Game()
        GameMapper().add(game)
        assert GameMapper().get(game.id) == game

    # GameMapper can remove a game from the list of games
    def test_remove_game(self):
        game = Game()
        GameMapper().add(game)
        GameMapper().remove(game.id)
        assert GameMapper().get(game.id) is None

    # GameMapper can handle adding a game with an invalid type
    def test_add_invalid_type(self):
        invalid_game = "invalid"
        with pytest.raises(TypeError):
            GameMapper().add(invalid_game)

    # GameMapper can handle getting a game with an invalid id
    def test_get_invalid_id(self):
        invalid_id = "invalid"
        assert GameMapper().get(invalid_id) is None

    # GameMapper can handle removing a game with an invalid id
    def test_remove_invalid_id(self):
        invalid_id = "invalid"
        with pytest.raises(KeyError):
            GameMapper().remove(invalid_id)